use flo_render_software::edges::*;

use flo_render_software::curves::geo::*;
use flo_render_software::curves::bezier::path::*;

#[test]
pub fn intercepts_1() {
    let path = BezierPathBuilder::<BezierSubpath>::start(Coord2(-0.2037662266584257, -0.34995458248326766))
        .curve_to((Coord2(-0.20006384207737574, -0.35319049320697476), Coord2(-0.19778599976302993, -0.3576703897326853)), Coord2(-0.19431519023924634, -0.36111487969372347))
        .curve_to((Coord2(-0.19431503462317426, -0.36111503420780017), Coord2(-0.1943148790071022, -0.3611151887218768)), Coord2(-0.19431472334434063, -0.3611153432823124))
        .curve_to((Coord2(-0.18294289255315344, -0.3724123516207334), Coord2(-0.16958474910311086, -0.3835618084981183)), Coord2(-0.15358122129524585, -0.38745096337884))
        .curve_to((Coord2(-0.15358119165293727, -0.3874509705835756), Coord2(-0.15358116201062869, -0.38745097778831117)), Coord2(-0.15358113235942653, -0.3874509849952084))
        .curve_to((Coord2(-0.14395285570388705, -0.3897915520488139), Coord2(-0.13347754501911002, -0.38814846670720726)), Coord2(-0.12368297576904297, -0.38814846670720726))
        .curve_to((Coord2(-0.12368297576904297, -0.38814846670720726), Coord2(-0.12368297576904297, -0.38814846670720726)), Coord2(-0.12368297576904297, -0.38814846670720726))
        .curve_to((Coord2(-0.11573407727766122, -0.38814846670720726), Coord2(-0.10778901214865767, -0.387407625817904)), Coord2(-0.10026765180850696, -0.3845881040578401))
        .curve_to((Coord2(-0.10026771361469485, -0.3845881272323997), Coord2(-0.10026777542088273, -0.38458815040695926)), Coord2(-0.10026783724561433, -0.3845881735884719))
        .curve_to((Coord2(-0.09822388934861571, -0.3838216071313091), Coord2(-0.09396942460443825, -0.3849772284862197)), Coord2(-0.09396942460443825, -0.38279426097869873))
        .curve_to((Coord2(-0.09310145582857077, -0.38279426097869873), Coord2(-0.09223348705270328, -0.38279426097869873)), Coord2(-0.09136525786016136, -0.38279426097869873))
        .curve_to((Coord2(-0.09136525786016136, -0.3851364602855769), Coord2(-0.09784821500867084, -0.38646200322312213)), Coord2(-0.0993533633159091, -0.3870264971650071))
        .curve_to((Coord2(-0.099353425122097, -0.3870265203395667), Coord2(-0.09935348692828488, -0.38702654351412624)), Coord2(-0.09935354875301648, -0.3870265666956389))
        .curve_to((Coord2(-0.10712695885690601, -0.3899405739957303), Coord2(-0.1154278620549664, -0.39075263345148414)), Coord2(-0.12368297576904297, -0.39075263345148414))
        .curve_to((Coord2(-0.12368297576904297, -0.39075263345148414), Coord2(-0.12368297576904297, -0.39075263345148414)), Coord2(-0.12368297576904297, -0.39075263345148414))
        .curve_to((Coord2(-0.13373978674827755, -0.39075263345148414), Coord2(-0.14429743492929809, -0.39238779522746203)), Coord2(-0.15419627242572972, -0.38998145671621737))
        .curve_to((Coord2(-0.15419624278342114, -0.38998146392095295), Coord2(-0.15419621314111256, -0.38998147112568854)), Coord2(-0.1541961834899104, -0.3899814783325858))
        .curve_to((Coord2(-0.17063635371210378, -0.38598621122478494), Coord2(-0.1844484936444886, -0.37458740886243014)), Coord2(-0.19615005937050312, -0.36296283512344935))
        .curve_to((Coord2(-0.19614990375443103, -0.36296298963752605), Coord2(-0.19614974813835898, -0.3629631441516027)), Coord2(-0.1961495924755974, -0.36296329871203825))
        .curve_to((Coord2(-0.19957834020225215, -0.3595605515885026), Coord2(-0.20183200830256534, -0.35510373526121125)), Coord2(-0.20547997962514364, -0.3519153821163417))
        .curve_to((Coord2(-0.20490878576133656, -0.35126184759863815), Coord2(-0.20433759189752945, -0.35060831308093454)), Coord2(-0.2037662266584257, -0.34995458248326766))
        .build();
    let y_pos       = -0.36296296296296293;
    let intercepts  = path.intercepts_on_line(y_pos).collect::<Vec<_>>();

    assert!(intercepts.len()%2 == 0, "Uneven number of intercepts ({:?})", intercepts);
}
