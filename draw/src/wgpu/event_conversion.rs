use flo_canvas_events::*;

use winit::keyboard::{PhysicalKey, KeyCode};

pub (crate) fn button_from_winit(mouse_button: &winit::event::MouseButton) -> Button {
    use winit::event::MouseButton;

    match mouse_button {
        MouseButton::Left           => Button::Left,
        MouseButton::Middle         => Button::Middle,
        MouseButton::Right          => Button::Right,
        MouseButton::Back           => Button::Other(0),
        MouseButton::Forward        => Button::Other(1),
        MouseButton::Other(other)   => Button::Other(*other as _)
    }
}

pub (crate) fn key_from_winit(winit_key: &PhysicalKey) -> Option<Key> {
    match winit_key {
        PhysicalKey::Code(KeyCode::ShiftLeft)       => Some(Key::ModifierShift),
        PhysicalKey::Code(KeyCode::ControlLeft)     => Some(Key::ModifierCtrl),
        PhysicalKey::Code(KeyCode::AltLeft)         => Some(Key::ModifierAlt),
        PhysicalKey::Code(KeyCode::SuperLeft)       => Some(Key::ModifierMeta),
        PhysicalKey::Code(KeyCode::ShiftRight)      => Some(Key::ModifierShift),
        PhysicalKey::Code(KeyCode::ControlRight)    => Some(Key::ModifierCtrl),
        PhysicalKey::Code(KeyCode::AltRight)        => Some(Key::ModifierAlt),
        PhysicalKey::Code(KeyCode::SuperRight)      => Some(Key::ModifierMeta),
        PhysicalKey::Code(KeyCode::Tab)             => Some(Key::KeyTab),
        PhysicalKey::Code(KeyCode::Space)           => Some(Key::KeySpace),
        PhysicalKey::Code(KeyCode::KeyA)            => Some(Key::KeyA),
        PhysicalKey::Code(KeyCode::KeyB)            => Some(Key::KeyB),
        PhysicalKey::Code(KeyCode::KeyC)            => Some(Key::KeyC),
        PhysicalKey::Code(KeyCode::KeyD)            => Some(Key::KeyD),
        PhysicalKey::Code(KeyCode::KeyE)            => Some(Key::KeyE),
        PhysicalKey::Code(KeyCode::KeyF)            => Some(Key::KeyF),
        PhysicalKey::Code(KeyCode::KeyG)            => Some(Key::KeyG),
        PhysicalKey::Code(KeyCode::KeyH)            => Some(Key::KeyH),
        PhysicalKey::Code(KeyCode::KeyI)            => Some(Key::KeyI),
        PhysicalKey::Code(KeyCode::KeyJ)            => Some(Key::KeyJ),
        PhysicalKey::Code(KeyCode::KeyK)            => Some(Key::KeyK),
        PhysicalKey::Code(KeyCode::KeyL)            => Some(Key::KeyL),
        PhysicalKey::Code(KeyCode::KeyM)            => Some(Key::KeyM),
        PhysicalKey::Code(KeyCode::KeyN)            => Some(Key::KeyN),
        PhysicalKey::Code(KeyCode::KeyO)            => Some(Key::KeyO),
        PhysicalKey::Code(KeyCode::KeyP)            => Some(Key::KeyP),
        PhysicalKey::Code(KeyCode::KeyQ)            => Some(Key::KeyQ),
        PhysicalKey::Code(KeyCode::KeyR)            => Some(Key::KeyR),
        PhysicalKey::Code(KeyCode::KeyS)            => Some(Key::KeyS),
        PhysicalKey::Code(KeyCode::KeyT)            => Some(Key::KeyT),
        PhysicalKey::Code(KeyCode::KeyU)            => Some(Key::KeyU),
        PhysicalKey::Code(KeyCode::KeyV)            => Some(Key::KeyV),
        PhysicalKey::Code(KeyCode::KeyW)            => Some(Key::KeyW),
        PhysicalKey::Code(KeyCode::KeyX)            => Some(Key::KeyX),
        PhysicalKey::Code(KeyCode::KeyY)            => Some(Key::KeyY),
        PhysicalKey::Code(KeyCode::KeyZ)            => Some(Key::KeyZ),
        PhysicalKey::Code(KeyCode::Digit1)          => Some(Key::Key1),
        PhysicalKey::Code(KeyCode::Digit2)          => Some(Key::Key2),
        PhysicalKey::Code(KeyCode::Digit3)          => Some(Key::Key3),
        PhysicalKey::Code(KeyCode::Digit4)          => Some(Key::Key4),
        PhysicalKey::Code(KeyCode::Digit5)          => Some(Key::Key5),
        PhysicalKey::Code(KeyCode::Digit6)          => Some(Key::Key6),
        PhysicalKey::Code(KeyCode::Digit7)          => Some(Key::Key7),
        PhysicalKey::Code(KeyCode::Digit8)          => Some(Key::Key8),
        PhysicalKey::Code(KeyCode::Digit9)          => Some(Key::Key9),
        PhysicalKey::Code(KeyCode::Digit0)          => Some(Key::Key0),
        PhysicalKey::Code(KeyCode::ArrowUp)         => Some(Key::KeyUp),
        PhysicalKey::Code(KeyCode::ArrowDown)       => Some(Key::KeyDown),
        PhysicalKey::Code(KeyCode::ArrowLeft)       => Some(Key::KeyLeft),
        PhysicalKey::Code(KeyCode::ArrowRight)      => Some(Key::KeyRight),
        PhysicalKey::Code(KeyCode::Backslash)       => Some(Key::KeyBackslash),
        PhysicalKey::Code(KeyCode::Slash)           => Some(Key::KeyForwardslash),
        PhysicalKey::Code(KeyCode::Backquote)       => Some(Key::KeyBacktick),
        PhysicalKey::Code(KeyCode::Comma)           => Some(Key::KeyComma),
        PhysicalKey::Code(KeyCode::Period)          => Some(Key::KeyFullstop),
        PhysicalKey::Code(KeyCode::Semicolon)       => Some(Key::KeySemicolon),
        PhysicalKey::Code(KeyCode::Quote)           => Some(Key::KeyQuote),
        PhysicalKey::Code(KeyCode::Minus)           => Some(Key::KeyMinus),
        PhysicalKey::Code(KeyCode::Equal)           => Some(Key::KeyEquals),
        PhysicalKey::Code(KeyCode::Escape)          => Some(Key::KeyEscape),
        PhysicalKey::Code(KeyCode::Insert)          => Some(Key::KeyInsert),
        PhysicalKey::Code(KeyCode::Home)            => Some(Key::KeyHome),
        PhysicalKey::Code(KeyCode::PageUp)          => Some(Key::KeyPgUp),
        PhysicalKey::Code(KeyCode::Delete)          => Some(Key::KeyDelete),
        PhysicalKey::Code(KeyCode::End)             => Some(Key::KeyEnd),
        PhysicalKey::Code(KeyCode::PageDown)        => Some(Key::KeyPgDown),
        PhysicalKey::Code(KeyCode::Backspace)       => Some(Key::KeyBackspace),
        PhysicalKey::Code(KeyCode::Enter)           => Some(Key::KeyEnter),
        PhysicalKey::Code(KeyCode::F1)              => Some(Key::KeyF1),
        PhysicalKey::Code(KeyCode::F2)              => Some(Key::KeyF2),
        PhysicalKey::Code(KeyCode::F3)              => Some(Key::KeyF3),
        PhysicalKey::Code(KeyCode::F4)              => Some(Key::KeyF4),
        PhysicalKey::Code(KeyCode::F5)              => Some(Key::KeyF5),
        PhysicalKey::Code(KeyCode::F6)              => Some(Key::KeyF6),
        PhysicalKey::Code(KeyCode::F7)              => Some(Key::KeyF7),
        PhysicalKey::Code(KeyCode::F8)              => Some(Key::KeyF8),
        PhysicalKey::Code(KeyCode::F9)              => Some(Key::KeyF9),
        PhysicalKey::Code(KeyCode::F10)             => Some(Key::KeyF10),
        PhysicalKey::Code(KeyCode::F11)             => Some(Key::KeyF11),
        PhysicalKey::Code(KeyCode::F12)             => Some(Key::KeyF12),
        PhysicalKey::Code(KeyCode::F13)             => Some(Key::KeyF13),
        PhysicalKey::Code(KeyCode::F14)             => Some(Key::KeyF14),
        PhysicalKey::Code(KeyCode::F15)             => Some(Key::KeyF15),
        PhysicalKey::Code(KeyCode::F16)             => Some(Key::KeyF16),
        PhysicalKey::Code(KeyCode::Numpad0)         => Some(Key::KeyNumpad0),
        PhysicalKey::Code(KeyCode::Numpad1)         => Some(Key::KeyNumpad1),
        PhysicalKey::Code(KeyCode::Numpad2)         => Some(Key::KeyNumpad2),
        PhysicalKey::Code(KeyCode::Numpad3)         => Some(Key::KeyNumpad3),
        PhysicalKey::Code(KeyCode::Numpad4)         => Some(Key::KeyNumpad4),
        PhysicalKey::Code(KeyCode::Numpad5)         => Some(Key::KeyNumpad5),
        PhysicalKey::Code(KeyCode::Numpad6)         => Some(Key::KeyNumpad6),
        PhysicalKey::Code(KeyCode::Numpad7)         => Some(Key::KeyNumpad7),
        PhysicalKey::Code(KeyCode::Numpad8)         => Some(Key::KeyNumpad8),
        PhysicalKey::Code(KeyCode::Numpad9)         => Some(Key::KeyNumpad9),
        PhysicalKey::Code(KeyCode::NumpadDivide)    => Some(Key::KeyNumpadDivide),
        PhysicalKey::Code(KeyCode::NumpadMultiply)  => Some(Key::KeyNumpadMultiply),
        PhysicalKey::Code(KeyCode::NumpadSubtract)  => Some(Key::KeyNumpadMinus),
        PhysicalKey::Code(KeyCode::NumpadAdd)       => Some(Key::KeyNumpadAdd),
        PhysicalKey::Code(KeyCode::NumpadEnter)     => Some(Key::KeyNumpadEnter),
        PhysicalKey::Code(KeyCode::NumpadDecimal)   => Some(Key::KeyNumpadDecimal),

        _                                           => None,
    }
}
